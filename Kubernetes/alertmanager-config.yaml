apiVersion: monitoring.coreos.com/v1alpha1
kind: AlertmanagerConfig
metadata:
  name: main-rules-alert-config
  namespace: monitoring
  labels:
    release: kube-prometheus-stack
spec:
  route:
    receiver: 'default-receiver'
    groupBy: ['alertname', 'service', 'severity']
    groupWait: 30s
    groupInterval: 5m
    repeatInterval: 4h
    routes:
    - matchers:
      - name: namespace
        value: monitoring 
      receiver: 'default-receiver'  # Fixed receiver name
      continue: true
      routes: 
      - matchers:
        - name: severity
          value: critical
        receiver: 'critical-alerts'
        continue: true
        groupWait: 10s  # Shorter wait for critical alerts
        repeatInterval: 1h  # More frequent for critical
      - matchers:
        - name: severity
          value: warning
        receiver: 'warning-alerts'
        continue: true
      - matchers:
        - name: team
          value: security
        receiver: 'security-alerts'
        continue: true
      - matchers:
        - name: service
          value: core-serve
        - name: severity
          value: critical
        receiver: 'core-serve-critical'
        groupBy: ['alertname', 'pod', 'instance']
        groupWait: 10s
        repeatInterval: 30m  # More frequent for core-serve critical
    - matchers:
      - name: namespace
        value: 'staging|production'          
      receiver: 'default-receiver'  # Fixed receiver name
      continue: true
      routes:
      - matchers:
        - name: severity
          value: critical
        receiver: 'critical-alerts'
        continue: true
        groupWait: 10s
        repeatInterval: 1h
      - matchers:
        - name: severity
          value: warning
        receiver: 'warning-alerts'
        continue: true
      - matchers:
        - name: team
          value: security
        receiver: 'security-alerts'
        continue: true
      - matchers:
        - name: service
          value: core-serve
        - name: severity
          value: critical
        receiver: 'core-serve-critical'
        groupBy: ['alertname', 'pod', 'instance']
        groupWait: 10s
        repeatInterval: 30m
    - matchers:
      - name: alertname
        value: "Watchdog"
      receiver: 'null' 
      continue: false
  
  # Inhibition rules to prevent duplicate alerts
  inhibitRules:
  - sourceMatch:
    - name: severity
      value: 'critical'
    targetMatch:
    - name: severity
      value: 'warning'
    equal: ['alertname', 'cluster', 'service']
  
  receivers:
  - name: 'default-receiver'
    emailConfigs:
    - to: 'adebunmi33@gmail.com'
      from: 'adebunmi33@gmail.com'
      sendResolved: true
      smarthost: 'smtp.gmail.com:587'
      authUsername: 'adebunmi33@gmail.com'
      authPassword:
        name: smtp-secret
        key: password
      requireTLS: true
      tlsConfig:
        insecureSkipVerify: false
      html: |
        <h2>[ALERT] {{ .GroupLabels.alertname }}</h2>
        {{ range .Alerts }}
        <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
        <p><strong>Description:</strong> {{ .Annotations.description }}</p>
        <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
        <p><strong>Instance:</strong> {{ .Labels.instance }}</p>
        <p><strong>Started:</strong> {{ .StartsAt }}</p>
        <hr>
        {{ end }}

  - name: 'critical-alerts'
    emailConfigs:
    - to: 'adebunmi33@gmail.com'
      from: 'adebunmi33@gmail.com'
      sendResolved: true
      smarthost: 'smtp.gmail.com:587'
      authUsername: 'adebunmi33@gmail.com'
      authPassword:
        name: smtp-secret
        key: password
      requireTLS: true
      tlsConfig:
        insecureSkipVerify: false
      html: |
        <h2>üö® [CRITICAL] {{ .GroupLabels.alertname }}</h2>
        {{ range .Alerts }}
        <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
        <p><strong>Description:</strong> {{ .Annotations.description }}</p>
        <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
        <p><strong>Instance:</strong> {{ .Labels.instance }}</p>
        <p><strong>Started:</strong> {{ .StartsAt }}</p>
        <hr>
        {{ end }}
    # Added Slack integration for critical alerts
    # slackConfigs:
    # - apiURL: 
    #     name: slack-webhook
    #     key: url
    #   channel: '#critical-alerts'
    #   sendResolved: true
    #   title: '{{ template "slack.title" . }}'
    #   text: '{{ template "slack.text" . }}'

  - name: 'warning-alerts'
    emailConfigs:
    - to: 'adebunmi33@gmail.com'
      from: 'adebunmi33@gmail.com'
      sendResolved: true
      smarthost: 'smtp.gmail.com:587'
      authUsername: 'adebunmi33@gmail.com'
      authPassword:
        name: smtp-secret
        key: password
      requireTLS: true
      tlsConfig:
        insecureSkipVerify: false
      html: |
        <h2>‚ö†Ô∏è [WARNING] {{ .GroupLabels.alertname }}</h2>
        {{ range .Alerts }}
        <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
        <p><strong>Description:</strong> {{ .Annotations.description }}</p>
        <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
        <p><strong>Instance:</strong> {{ .Labels.instance }}</p>
        <p><strong>Started:</strong> {{ .StartsAt }}</p>
        <hr>
        {{ end }}

  - name: 'security-alerts'
    emailConfigs:
    - to: 'security-team@example.com'  # Changed to security team email
      from: 'adebunmi33@gmail.com'
      sendResolved: true
      smarthost: 'smtp.gmail.com:587'
      authUsername: 'adebunmi33@gmail.com'
      authPassword:
        name: smtp-secret
        key: password
      requireTLS: true
      tlsConfig:
        insecureSkipVerify: false
      html: |
        <h2>üîí [SECURITY] {{ .GroupLabels.alertname }}</h2>
        {{ range .Alerts }}
        <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
        <p><strong>Description:</strong> {{ .Annotations.description }}</p>
        <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
        <p><strong>Instance:</strong> {{ .Labels.instance }}</p>
        <p><strong>Started:</strong> {{ .StartsAt }}</p>
        <hr>
        {{ end }}
    pagerdutyConfigs:
    - routingKey:
        name: pagerduty-key
        key: routingKey
      severity: 'critical'

  - name: 'core-serve-critical'
    emailConfigs:
    - to: 'core-serve-team@example.com'  # Specific team email
      from: 'adebunmi33@gmail.com'
      sendResolved: true
      smarthost: 'smtp.gmail.com:587'
      authUsername: 'adebunmi33@gmail.com'
      authPassword:
        name: smtp-secret
        key: password
      requireTLS: true
      tlsConfig:
        insecureSkipVerify: false
      html: |
        <h2>üö® [CORE-SERVE CRITICAL] {{ .GroupLabels.alertname }}</h2>
        {{ range .Alerts }}
        <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
        <p><strong>Description:</strong> {{ .Annotations.description }}</p>
        <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
        <p><strong>Instance:</strong> {{ .Labels.instance }}</p>
        <p><strong>Started:</strong> {{ .StartsAt }}</p>
        <hr>
        {{ end }}
    opsgenieConfigs:
    - apiKey:
        name: opsgenie-key
        key: apiKey
      message: 'Core Serve Critical Alert'
      priority: 'P1'