apiVersion: monitoring.coreos.com/v1alpha1
kind: AlertmanagerConfig
metadata:
  name: main-rules-alert-config
  namespace: monitoring
  labels:
    release: kube-prometheus-stack
spec:
  route:
    receiver: 'default-receiver' # This is the fallback receiver for any alerts not matched by sub-routes
    groupBy: ['alertname', 'cluster', 'service', 'severity']
    groupWait: 30s
    groupInterval: 5m
    repeatInterval: 4h
    routes:
    # --- Route for alerts originating from the 'monitoring' namespace ---
    # This route is for alerts generated by the monitoring stack itself (e.g., Prometheus alerts)
    - matchers:
      - name: namespace
        value: 'monitoring' # Matches alerts specifically from the 'monitoring' namespace
      receiver: 'monitoring/main-rules-alert-config/default-receiver'
      continue: true # Important: continue to evaluate its sub-routes
      routes:
      - matchers:
        - name: severity
          value: critical
        receiver: 'critical-alerts'
        continue: true
      - matchers:
        - name: severity
          value: warning
        receiver: 'warning-alerts'
        continue: true
      - matchers:
        - name: team
          value: security
        receiver: 'security-alerts'
        continue: true
      - matchers:
        - name: service
          value: core-serve # Applies to core-serve alerts if they happen to be in 'monitoring' namespace
        - name: severity
          value: critical
        receiver: 'core-serve-critical'
        groupBy: ['alertname', 'pod', 'instance']
        groupWait: 10s
        repeatInterval: 1h

    # --- NEW: Route for alerts originating from application namespaces (e.g., 'staging', 'production') ---
    # This is the route that will catch your 'APIDown' alert from 'staging'
    - matchers:
      - name: namespace
        value: '^(staging|production)$' # Use regex to match either 'staging' or 'production'
                                       # The `^` and `$` anchors ensure it's an exact match of the entire label value
      receiver: 'monitoring/main-rules-alert-config/default-receiver' # You can create a dedicated receiver if needed
      continue: true # Important: continue to evaluate its sub-routes
      routes:
      # Duplicate your desired routing logic for application alerts here.
      # This ensures alerts from staging/production are categorized by severity, team, etc.
      - matchers:
        - name: severity
          value: critical
        receiver: 'critical-alerts'
        continue: true
      - matchers:
        - name: severity
          value: warning
        receiver: 'warning-alerts'
        continue: true
      - matchers:
        - name: team
          value: security
        receiver: 'security-alerts'
        continue: true
      - matchers:
        - name: service
          value: core-serve # This will specifically catch core-serve alerts in staging/production
        - name: severity
          value: critical
        receiver: 'core-serve-critical'
        groupBy: ['alertname', 'pod', 'instance']
        groupWait: 10s
        repeatInterval: 1h

    # --- Other top-level routes (like Watchdog) ---
    - matchers:
      - name: alertname
        value: "Watchdog"
      receiver: 'null' # Continue sending Watchdog to null or a specific receiver
      continue: false

  receivers:
  # Your existing receiver definitions remain the same
  - name: 'default-receiver'
    emailConfigs:
    - to: 'adebunmi33@gmail.com'
      from: 'adebunmi33@gmail.com'
      sendResolved: true
      smarthost: 'smtp.gmail.com:587'
      authUsername: 'adebunmi33@gmail.com'
      authPassword:
        name: smtp-secret
        key: password
      requireTLS: true
      tlsConfig:
        insecureSkipVerify: false
      html: |
        <h2>[ALERT] {{ .GroupLabels.alertname }}</h2>
        {{ range .Alerts }}
        <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
        <p><strong>Description:</strong> {{ .Annotations.description }}</p>
        <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
        <p><strong>Instance:</strong> {{ .Labels.instance }}</p>
        <p><strong>Started:</strong> {{ .StartsAt }}</p>
        <hr>
        {{ end }}

  - name: 'critical-alerts'
    emailConfigs:
    - to: 'adebunmi33@gmail.com'
      from: 'adebunmi33@gmail.com'
      sendResolved: true
      smarthost: 'smtp.gmail.com:587'
      authUsername: 'adebunmi33@gmail.com'
      authPassword:
        name: smtp-secret
        key: password
      requireTLS: true
      tlsConfig:
        insecureSkipVerify: false
      html: |
        <h2>üö® [CRITICAL] {{ .GroupLabels.alertname }}</h2>
        {{ range .Alerts }}
        <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
        <p><strong>Description:</strong> {{ .Annotations.description }}</p>
        <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
        <p><strong>Instance:</strong> {{ .Labels.instance }}</p>
        <p><strong>Started:</strong> {{ .StartsAt }}</p>
        <hr>
        {{ end }}

  - name: 'warning-alerts'
    emailConfigs:
    - to: 'adebunmi33@gmail.com'
      from: 'adebunmi33@gmail.com'
      sendResolved: true
      smarthost: 'smtp.gmail.com:587'
      authUsername: 'adebunmi33@gmail.com'
      authPassword:
        name: smtp-secret
        key: password
      requireTLS: true
      tlsConfig:
        insecureSkipVerify: false
      html: |
        <h2>‚ö†Ô∏è [WARNING] {{ .GroupLabels.alertname }}</h2>
        {{ range .Alerts }}
        <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
        <p><strong>Description:</strong> {{ .Annotations.description }}</p>
        <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
        <p><strong>Instance:</strong> {{ .Labels.instance }}</p>
        <p><strong>Started:</strong> {{ .StartsAt }}</p>
        <hr>
        {{ end }}

  - name: 'security-alerts'
    emailConfigs:
    - to: 'adebunmi33@gmail.com'
      from: 'adebunmi33@gmail.com'
      sendResolved: true
      smarthost: 'smtp.gmail.com:587'
      authUsername: 'adebunmi33@gmail.com'
      authPassword:
        name: smtp-secret
        key: password
      requireTLS: true
      tlsConfig:
        insecureSkipVerify: false
      html: |
        <h2>üîí [SECURITY] {{ .GroupLabels.alertname }}</h2>
        {{ range .Alerts }}
        <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
        <p><strong>Description:</strong> {{ .Annotations.description }}</p>
        <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
        <p><strong>Instance:</strong> {{ .Labels.instance }}</p>
        <p><strong>Started:</strong> {{ .StartsAt }}</p>
        <hr>
        {{ end }}

  - name: 'core-serve-critical'
    emailConfigs:
    - to: 'adebunmi33@gmail.com'
      from: 'adebunmi33@gmail.com'
      sendResolved: true
      smarthost: 'smtp.gmail.com:587'
      authUsername: 'adebunmi33@gmail.com'
      authPassword:
        name: smtp-secret
        key: password
      requireTLS: true
      tlsConfig:
        insecureSkipVerify: false
      html: |
        <h2>üö® [CORE-SERVE CRITICAL] {{ .GroupLabels.alertname }}</h2>
        {{ range .Alerts }}
        <p><strong>Alert:</strong> {{ .Annotations.summary }}</p>
        <p><strong>Description:</strong> {{ .Annotations.description }}</p>
        <p><strong>Severity:</strong> {{ .Labels.severity }}</p>
        <p><strong>Instance:</strong> {{ .Labels.instance }}</p>
        <p><strong>Started:</strong> {{ .StartsAt }}</p>
        <hr>
        {{ end }}