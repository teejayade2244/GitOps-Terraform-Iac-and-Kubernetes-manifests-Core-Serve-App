apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}
  namespace: {{ .Values.app.namespace }}
  labels:
    {{- include "core-serve-backend.labels" . | nindent 4 }}

spec:
  selector:
    matchLabels:
      {{- include "core-serve-backend.selectorLabels" . | nindent 6 }}
  replicas: {{ .Values.app.replicas }}
  template:
    metadata:
      labels:
        {{- include "core-serve-backend.selectorLabels" . | nindent 8 }}
    spec:
      # Security context to enhance security
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: {{ .Values.serviceAccount.name }}
      # Topology spread constraints to ensure even distribution across zones and nodes
      {{- if or .Values.topologySpread.zones.enabled .Values.topologySpread.nodes.enabled }}
      topologySpreadConstraints:
        {{- if .Values.topologySpread.zones.enabled }}
        - maxSkew: {{ .Values.topologySpread.maxSkew }}
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              {{- include "core-serve-backend.selectorLabels" . | nindent 14 }}
        {{- end }}
        {{- if .Values.topologySpread.nodes.enabled }}
        - maxSkew: {{ .Values.topologySpread.maxSkew }}
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              {{- include "core-serve-backend.selectorLabels" . | nindent 14 }}
        {{- end }}
      {{- end }}
      # volumes:
      #   - name: vault-secrets-volume
      #     emptyDir:
      #       medium: Memory
      containers:
      # This is the main application container
        - name: {{ .Values.app.name }}
          # Security context to enhance security
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          image: {{ .Values.container.image.repository }}:{{ .Values.container.image.tag }}
          envFrom:
          - secretRef:
              name: core-serve-secret
          resources:
            {{- toYaml .Values.container.resources | nindent 12 }}
          ports:
            - containerPort: {{ .Values.container.port }}
          # Volume mount for Vault secrets
          # volumeMounts:
          #   - name: vault-secrets-volume
          #     mountPath: /vault/secrets
          #     readOnly: true
          # Probe configuration
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.liveness.path }}
              port: {{ .Values.container.port }}
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelay }}
            periodSeconds: {{ .Values.probes.liveness.period }}
            timeoutSeconds: {{ .Values.probes.liveness.timeout }}
            failureThreshold: {{ .Values.probes.liveness.failureThreshold }}
          # Readiness probe configuration
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.readiness.path }}
              port: {{ .Values.container.port }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelay }}
            periodSeconds: {{ .Values.probes.readiness.period }}
            timeoutSeconds: {{ .Values.probes.readiness.timeout }}
            failureThreshold: {{ .Values.probes.readiness.failureThreshold }}
